name: tp-distribuidos-grupo13
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
    - 5672:5672
    - 15672:15672
    healthcheck:
      test: [CMD, rabbitmqctl, status]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
    - testing_net
  client_id_1:
    build:
      context: .
      dockerfile: client/Dockerfile
    entrypoint: [python3, main.py]
    container_name: client_id_1
    environment:
    - CLI_ID=1
    - CLI_DATA_DIR=/data
    - CLI_OUTPUT_DIR=/data/output
    - DATA_MODE=tree
    - SERVER_ADDRESS=server:12345
    volumes:
    - ./.data-test:/data:ro
    - ./.results/client_1:/data/output:rw
    - ./client/config.ini:/config.ini:ro
    - ./utils:/client/utils:ro
    - ./middleware:/client/middleware:ro
    networks:
    - testing_net
    depends_on:
      server:
        condition: service_started
  filter_year_id_1_service:
    build:
      context: .
      dockerfile: workers/filter/Dockerfile
    entrypoint: [python3, main.py, --filter, year]
    container_name: filter_year_id_1_service
    environment:
    - PYTHONUNBUFFERED=1
    - LOGGING_LEVEL=DEBUG
    volumes:
    - ./workers/filter/config/config_year.ini:/workers/filter/config/config_year.ini:ro
    - ./utils:/workers/utils:ro
    - ./middleware:/workers/middleware:ro
    networks:
    - testing_net
    depends_on:
      server:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  aggregator_products_id_1_service:
    build:
      context: .
      dockerfile: workers/aggregators/Dockerfile
    entrypoint: [python3, main.py]
    container_name: aggregator_products_id_1_service
    environment:
    - PYTHONUNBUFFERED=1
    - LOGGING_LEVEL=DEBUG
    - AGGREGATOR_TYPE=PRODUCTS
    volumes:
    - ./utils:/workers/utils:ro
    - ./middleware:/workers/middleware:ro
    networks:
    - testing_net
    depends_on:
      server:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  maximizer_max_1_3_id_1_service:
    build:
      context: .
      dockerfile: workers/maximizers/Dockerfile
    entrypoint: [python3, main.py]
    container_name: maximizer_max_1_3_id_1_service
    environment:
    - PYTHONUNBUFFERED=1
    - LOGGING_LEVEL=DEBUG
    - MAXIMIZER_TYPE=MAX
    - MAXIMIZER_RANGE=1
    volumes:
    - ./utils:/workers/utils:ro
    - ./middleware:/workers/middleware:ro
    networks:
    - testing_net
    depends_on:
      server:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  maximizer_max_4_6_id_1_service:
    build:
      context: .
      dockerfile: workers/maximizers/Dockerfile
    entrypoint: [python3, main.py]
    container_name: maximizer_max_4_6_id_1_service
    environment:
    - PYTHONUNBUFFERED=1
    - LOGGING_LEVEL=DEBUG
    - MAXIMIZER_TYPE=MAX
    - MAXIMIZER_RANGE=2
    volumes:
    - ./utils:/workers/utils:ro
    - ./middleware:/workers/middleware:ro
    networks:
    - testing_net
    depends_on:
      server:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  maximizer_max_7_8_id_1_service:
    build:
      context: .
      dockerfile: workers/maximizers/Dockerfile
    entrypoint: [python3, main.py]
    container_name: maximizer_max_7_8_id_1_service
    environment:
    - PYTHONUNBUFFERED=1
    - LOGGING_LEVEL=DEBUG
    - MAXIMIZER_TYPE=MAX
    - MAXIMIZER_RANGE=3
    volumes:
    - ./utils:/workers/utils:ro
    - ./middleware:/workers/middleware:ro
    networks:
    - testing_net
    depends_on:
      server:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  maximizer_max_absolute_id_1_service:
    build:
      context: .
      dockerfile: workers/maximizers/Dockerfile
    entrypoint: [python3, main.py]
    container_name: maximizer_max_absolute_id_1_service
    environment:
    - PYTHONUNBUFFERED=1
    - LOGGING_LEVEL=DEBUG
    - MAXIMIZER_TYPE=MAX
    - MAXIMIZER_RANGE=0
    volumes:
    - ./utils:/workers/utils:ro
    - ./middleware:/workers/middleware:ro
    networks:
    - testing_net
    depends_on:
      server:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  joiner_items_id_1_service:
    build:
      context: .
      dockerfile: workers/joiners/Dockerfile
    entrypoint: [python3, main.py]
    container_name: joiner_items_id_1_service
    environment:
    - PYTHONUNBUFFERED=1
    - LOGGING_LEVEL=DEBUG
    - JOINER_TYPE=ITEMS
    volumes:
    - ./utils:/workers/utils:ro
    - ./middleware:/workers/middleware:ro
    networks:
    - testing_net
    depends_on:
      server:
        condition: service_started
      rabbitmq:
        condition: service_healthy
  server:
    container_name: server
    build:
      context: .
      dockerfile: server/Dockerfile
    entrypoint: [python3, main.py]
    environment:
    - PYTHONUNBUFFERED=1
    - CLI_CLIENTS=1
    volumes:
    - ./server/config.ini:/config.ini:ro
    - ./utils:/server/utils:ro
    - ./middleware:/server/middleware:ro
    networks:
    - testing_net
    depends_on:
      rabbitmq:
        condition: service_healthy
networks:
  testing_net:
    driver: bridge
